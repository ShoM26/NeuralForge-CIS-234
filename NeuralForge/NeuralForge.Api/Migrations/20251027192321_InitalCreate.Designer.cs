// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NeuralForge.Api.Data;

#nullable disable

namespace NeuralForge.Api.Migrations
{
    [DbContext(typeof(NeuralForgeContext))]
    [Migration("20251027192321_InitalCreate")]
    partial class InitalCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("NeuralForge.Api.Entities.AssemblyLine", b =>
                {
                    b.Property<int>("AssemblyLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assembly_line_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("AssemblyLineId"));

                    b.Property<int>("ChipId")
                        .HasColumnType("int")
                        .HasColumnName("chip_id");

                    b.Property<int>("ChipsPerHour")
                        .HasColumnType("int")
                        .HasColumnName("chips_per_hour");

                    b.Property<int?>("NumberOfMachines")
                        .HasColumnType("int")
                        .HasColumnName("number_of_machines");

                    b.Property<int>("SiteId")
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    b.HasKey("AssemblyLineId");

                    b.HasIndex("ChipId");

                    b.HasIndex("SiteId");

                    b.ToTable("assembly_lines");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.Chip", b =>
                {
                    b.Property<int>("ChipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("chip_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ChipId"));

                    b.Property<string>("ChipName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chip_name");

                    b.Property<double>("MarketPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("double")
                        .HasColumnName("market_price");

                    b.Property<int>("NumberOfCores")
                        .HasColumnType("int")
                        .HasColumnName("number_of_cores");

                    b.Property<double>("ProductionTime")
                        .HasPrecision(18, 2)
                        .HasColumnType("double")
                        .HasColumnName("production_time");

                    b.HasKey("ChipId");

                    b.ToTable("chips");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.DowntimeEvent", b =>
                {
                    b.Property<int>("DowntimeEventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("downtime_event_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("DowntimeEventId"));

                    b.Property<int>("AssemblyLineId")
                        .HasColumnType("int")
                        .HasColumnName("assembly_line_id");

                    b.Property<int>("ChipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_time");

                    b.Property<string>("EventType")
                        .HasColumnType("longtext")
                        .HasColumnName("event_type");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_time");

                    b.HasKey("DowntimeEventId");

                    b.HasIndex("AssemblyLineId");

                    b.HasIndex("ChipId");

                    b.ToTable("downtime_events");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.ProductionRecord", b =>
                {
                    b.Property<int>("ProductionRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("production_record_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ProductionRecordId"));

                    b.Property<int>("AssemblyLineId")
                        .HasColumnType("int")
                        .HasColumnName("assembly_line_id");

                    b.Property<int>("ChipId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HourOfDay")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("hour_of_day");

                    b.Property<int>("NumberOfChips")
                        .HasColumnType("int")
                        .HasColumnName("number_of_chips");

                    b.HasKey("ProductionRecordId");

                    b.HasIndex("AssemblyLineId");

                    b.HasIndex("ChipId");

                    b.ToTable("production_records");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.Site", b =>
                {
                    b.Property<int>("SiteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("site_id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("SiteId"));

                    b.Property<int>("ChipsPerHour")
                        .HasColumnType("int")
                        .HasColumnName("chips_per_hour");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<int>("NumberOfLines")
                        .HasColumnType("int")
                        .HasColumnName("number_of_lines");

                    b.HasKey("SiteId");

                    b.ToTable("sites");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.AssemblyLine", b =>
                {
                    b.HasOne("NeuralForge.Api.Entities.Chip", "Chip")
                        .WithMany("AssemblyLines")
                        .HasForeignKey("ChipId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NeuralForge.Api.Entities.Site", "Site")
                        .WithMany("AssemblyLines")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chip");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.DowntimeEvent", b =>
                {
                    b.HasOne("NeuralForge.Api.Entities.AssemblyLine", "AssemblyLine")
                        .WithMany("DowntimeEvents")
                        .HasForeignKey("AssemblyLineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeuralForge.Api.Entities.Chip", "Chip")
                        .WithMany()
                        .HasForeignKey("ChipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssemblyLine");

                    b.Navigation("Chip");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.ProductionRecord", b =>
                {
                    b.HasOne("NeuralForge.Api.Entities.AssemblyLine", "AssemblyLine")
                        .WithMany("ProductionRecords")
                        .HasForeignKey("AssemblyLineId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("NeuralForge.Api.Entities.Chip", "Chip")
                        .WithMany()
                        .HasForeignKey("ChipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssemblyLine");

                    b.Navigation("Chip");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.AssemblyLine", b =>
                {
                    b.Navigation("DowntimeEvents");

                    b.Navigation("ProductionRecords");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.Chip", b =>
                {
                    b.Navigation("AssemblyLines");
                });

            modelBuilder.Entity("NeuralForge.Api.Entities.Site", b =>
                {
                    b.Navigation("AssemblyLines");
                });
#pragma warning restore 612, 618
        }
    }
}
